#!/bin/sh

# Aliases

# general
alias \
  e="$EDITOR" \
  p="$PAGER" \
  sudo="sudo " \
  s="sudo" \
  se="sudoedit" \
  shutdown="shutdown -h now" \
  visudo="sudo visudo" \
  wifi="sudo wifi" \
  wget="wget -c --hsts-file='$XDG_CACHE_HOME/wget-hsts'" \
  mkdir="mkdir -p" \
  ping="ping -c 5" \
  wtf="journalctl" \
  btctl="bluetoothctl" \
  k="killall" \
  cls="clear" \

# systemd
alias \
  sc="grc --colour=auto systemctl" \
  scu="grc --colour=auto systemctl --user" \
  unfuck="sudo systemctl restart" \

# failsaves
alias \
  rm="rm -I --preserve-root" \
  mv="mv -i" \
  cp="cp -i" \
  ln="ln -i" \
  chown="chown --preserve-root" \
  chmod="chmod --preserve-root" \
  chgrp="chgrp --preserve-root" \

# colorize all the things
alias \
	grep="grep --color=auto" \
	fgrep="fgrep --color=auto" \
	egrep="egrep --color=auto" \
	diff="diff --color=auto" \
	ls="lsd -AlF" \
	mc="mc --nocolor" \
	ping="grc --colour=auto ping -c 5" \
	traceroute="grc --colour=auto traceroute" \
	make="grc --colour=auto make" \
	diff="grc --colour=auto diff" \
	cvs="grc --colour=auto cvs" \
	netstat="grc --colour=auto netstat" \
	lspci="grc --colour=auto lspci" \
	lsblk="grc --colour=auto lsblk" \
	lsof="grc --colour=auto lsof" \
	lsmod="grc --colour=auto lsmod" \

# dnf shortcuts
alias \
  dnfarm="sudo dnf autoremove" \
	dnfin="sudo dnf install" \
	dnfrm="sudo dnf remove" \
	dnfup="sudo dnf upgrade" \
	dnfcm="sudo dnf config-manager" \
	dnfsr="dnf search" \
	dnfsl="dnf -C list installed | grep" \
	dnfdg="sudo dnf downgrade --enablerepo=updates-archive" \

# flatpak shortcuts
alias \
  fp="flatpak" \
  fpup="flatpak update" \
  fpin="flatpak install --user" \
  fprm="flatpak uninstall" \

# tmux
alias \
  t="(tmux has-session 2>/dev/null && tmux attach) || (tmux -f $HOME/.config/tmux/tmux.conf)" \
  ta="tmux attach" \
  td="tmux detach" \
  tks="tmux kill-ses" \

# git
alias \
  gaa="git add --all" \
  gcma="git commit -a" \
  gcl="git clone" \
  gpom="git push -u origin master" \

# improved cd
alias \
  ..="cd .." \
  .2="cd ../../" \
  .3="cd ../../../" \
  .4="cd ../../../../" \
  .5="cd ../../../../../" \

# Functions

# archive files easily
# see https://wiki.archlinux.org/index.php/Zsh_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)#%D0%A3%D0%BF%D0%B0%D0%BA%D0%BE%D0%B2%D0%BA%D0%B0_%D0%B2_%D0%B0%D1%80%D1%85%D0%B8%D0%B2
function pk {
  if [ $1 ] ; then
    case $1 in
      tbz)  tar cjvf $2.tar.bz2 $2   ;;
      tgz)  tar czvf $2.tar.gz  $2   ;;
      tar)  tar cpvf $2.tar  $2      ;;
      bz2)  bzip $2                  ;;
      gz)   gzip -c -9 -n $2 > $2.gz ;;
      zip)  zip -r $2.zip $2         ;;
      7z)   7z a $2.7z $2            ;;
      *)    echo "'$1' не может быть упакован с помощью pk()" ;;
    esac
  else
    echo "'$1' не является допустимым файлом"
  fi
}

# same for extracting
# https://wiki.archlinux.org/index.php/Zsh_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)#%D0%A0%D0%B0%D1%81%D0%BF%D0%B0%D0%BA%D0%BE%D0%B2%D0%BA%D0%B0_%D0%B0%D1%80%D1%85%D0%B8%D0%B2%D0%B0
function ex {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2) tar xvjf $1   ;;
      *.tar.gz)  tar xvzf $1   ;;
      *.tar.xz)  tar xvfJ $1   ;;
      *.bz2)     bunzip2 $1    ;;
      *.rar)     unrar x $1    ;;
      *.gz)      gunzip $1     ;;
      *.tar)     tar xvf $1    ;;
      *.tbz2)    tar xvjf $1   ;;
      *.tgz)     tar xvzf $1   ;;
      *.zip)     unzip $1      ;;
      *.Z)       uncompress $1 ;;
      *.7z)      7z x $1       ;;
      *)         echo "'$1' не может быть распакован при помощи >ex<" ;;
    esac
  else
    echo "'$1' не является допустимым файлом"
 fi
}

# reload zsh config
function reload {
  source $ZDOTDIR/.zshenv
  source $ZDOTDIR/.zprofile
  source $ZDOTDIR/.zshrc
}

# mkcd command
# This is an improvised version of the mkcd command at http://superuser.com/questions/152794/is-there-a-shortcut-to-mkdir-foo-and-immediately-cd-into-it
# This function has to be added to the ~/.bashrc file
# After that you can run command like: mkdir abc, mkdir -p one/two/three
# see https://gist.github.com/rajeshg/712300
function mkcd {
  last=$(eval "echo \$$#")
  if [ ! -n "$last" ]; then
    echo "Введите имя папки"
  elif [ -d $last ]; then
    echo "Папка \`$last' уже существует"
  else
    mkdir -pv $@ && cd $last
  fi
}

# backup file
function backup {
  cp -- "$1"{,.bak};
}
